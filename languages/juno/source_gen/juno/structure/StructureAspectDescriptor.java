package juno.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBinaryExpression = createDescriptorForBinaryExpression();
  /*package*/ final ConceptDescriptor myConceptBooleanLiteral = createDescriptorForBooleanLiteral();
  /*package*/ final ConceptDescriptor myConceptComment = createDescriptorForComment();
  /*package*/ final ConceptDescriptor myConceptEmptyStatement = createDescriptorForEmptyStatement();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptField = createDescriptorForField();
  /*package*/ final ConceptDescriptor myConceptFloatLiteral = createDescriptorForFloatLiteral();
  /*package*/ final ConceptDescriptor myConceptInt = createDescriptorForInt();
  /*package*/ final ConceptDescriptor myConceptIntLiteral = createDescriptorForIntLiteral();
  /*package*/ final ConceptDescriptor myConceptLiteral = createDescriptorForLiteral();
  /*package*/ final ConceptDescriptor myConceptRecord = createDescriptorForRecord();
  /*package*/ final ConceptDescriptor myConceptRefinedType = createDescriptorForRefinedType();
  /*package*/ final ConceptDescriptor myConceptRegexLiteral = createDescriptorForRegexLiteral();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptStringLiteral = createDescriptorForStringLiteral();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptWorkbook = createDescriptorForWorkbook();
  /*package*/ final EnumerationDescriptor myEnumerationBinaryOperation = new EnumerationDescriptor_BinaryOperation();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBinaryExpression, myConceptBooleanLiteral, myConceptComment, myConceptEmptyStatement, myConceptExpression, myConceptField, myConceptFloatLiteral, myConceptInt, myConceptIntLiteral, myConceptLiteral, myConceptRecord, myConceptRefinedType, myConceptRegexLiteral, myConceptStatement, myConceptStringLiteral, myConceptType, myConceptWorkbook);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.BinaryExpression:
        return myConceptBinaryExpression;
      case LanguageConceptSwitch.BooleanLiteral:
        return myConceptBooleanLiteral;
      case LanguageConceptSwitch.Comment:
        return myConceptComment;
      case LanguageConceptSwitch.EmptyStatement:
        return myConceptEmptyStatement;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.Field:
        return myConceptField;
      case LanguageConceptSwitch.FloatLiteral:
        return myConceptFloatLiteral;
      case LanguageConceptSwitch.Int:
        return myConceptInt;
      case LanguageConceptSwitch.IntLiteral:
        return myConceptIntLiteral;
      case LanguageConceptSwitch.Literal:
        return myConceptLiteral;
      case LanguageConceptSwitch.Record:
        return myConceptRecord;
      case LanguageConceptSwitch.RefinedType:
        return myConceptRefinedType;
      case LanguageConceptSwitch.RegexLiteral:
        return myConceptRegexLiteral;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.StringLiteral:
        return myConceptStringLiteral;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.Workbook:
        return myConceptWorkbook;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationBinaryOperation);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForBinaryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "BinaryExpression", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccfb6afL);
    b.class_(false, false, false);
    // extends: juno.structure.Expression
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccca609L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789199023");
    b.version(3);
    b.property("operation", 0x5ebaed1a9cdcca93L).type(MetaIdFactory.dataTypeId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccfb6e4L)).origin("6826028883790056083").done();
    b.aggregate("left", 0x5ebaed1a9ccfb6b2L).target(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccca609L).optional(false).ordered(true).multiple(false).origin("6826028883789199026").done();
    b.aggregate("right", 0x5ebaed1a9ccfb6b4L).target(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccca609L).optional(false).ordered(true).multiple(false).origin("6826028883789199028").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "BooleanLiteral", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf1064L);
    b.class_(false, false, false);
    // extends: juno.structure.Literal
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105fL);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789156452");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Comment", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cd34aeeL);
    b.class_(false, false, false);
    // extends: juno.structure.Statement
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccccd98L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789433582");
    b.version(3);
    b.property("content", 0x5ebaed1a9cd34b01L).type(PrimitiveTypeId.STRING).origin("6826028883789433601").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "EmptyStatement", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf04d4L);
    b.class_(false, false, false);
    // extends: juno.structure.Statement
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccccd98L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789153492");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Expression", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccca609L);
    b.class_(false, true, false);
    // extends: juno.structure.Statement
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccccd98L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883788998153");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Field", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x2673c4abb3c8250eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/2770774437497677070");
    b.version(3);
    b.associate("type", 0x5ebaed1a9cc2ff58L).target(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cc54b38L).optional(false).origin("6826028883788365656").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFloatLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "FloatLiteral", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf1065L);
    b.class_(false, false, false);
    // extends: juno.structure.Literal
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105fL);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789156453");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInt() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Int", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccca60dL);
    b.class_(false, false, false);
    b.parent(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cc54b38L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883788998157");
    b.version(3);
    b.alias("int");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "IntLiteral", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccca60aL);
    b.class_(false, false, false);
    // extends: juno.structure.Literal
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105fL);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883788998154");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Literal", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105fL);
    b.class_(false, true, false);
    // extends: juno.structure.Expression
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccca609L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789156447");
    b.version(3);
    b.property("value", 0x5ebaed1a9ccf1062L).type(PrimitiveTypeId.STRING).origin("6826028883789156450").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRecord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Record", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x2673c4abb3c7c374L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cc54b38L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/2770774437497652084");
    b.version(3);
    b.aggregate("fields", 0x2673c4abb3c82511L).target(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x2673c4abb3c8250eL).optional(false).ordered(true).multiple(true).origin("2770774437497677073").done();
    b.alias("record");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRefinedType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "RefinedType", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cc54b35L);
    b.class_(false, false, false);
    b.parent(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cc54b38L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883788516149");
    b.version(3);
    b.associate("baseType", 0x5ebaed1a9cc54b61L).target(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cc54b38L).optional(false).origin("6826028883788516193").done();
    b.alias("refined type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRegexLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "RegexLiteral", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cdcca2bL);
    b.class_(false, false, false);
    // extends: juno.structure.Literal
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105fL);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883790055979");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Statement", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccccd98L);
    b.class_(false, true, false);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789008280");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "StringLiteral", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105dL);
    b.class_(false, false, false);
    // extends: juno.structure.Literal
    b.super_(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105fL);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789156445");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Type", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cc54b38L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883788516152");
    b.version(3);
    b.property("specifier", 0x5ebaed1a9ccd95dfL).type(PrimitiveTypeId.STRING).origin("6826028883789059551").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWorkbook() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("juno", "Workbook", 0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf049eL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:348a7849-cae2-4f59-b869-579d38308a9e(juno.structure)/6826028883789153438");
    b.version(3);
    b.aggregate("statemends", 0x5ebaed1a9ccf04d2L).target(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccccd98L).optional(true).ordered(true).multiple(true).origin("6826028883789153490").done();
    return b.create();
  }
}
