package juno.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new BinaryExpression_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Comment_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new EmptyStatement_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Field_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Literal_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Record_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new RefinedType_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new StringLiteral_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Workbook_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new Field_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccfb6afL), MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cd34aeeL), MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf04d4L), MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x2673c4abb3c8250eL), MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105fL), MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x2673c4abb3c7c374L), MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9cc54b35L), MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf105dL), MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x5ebaed1a9ccf049eL)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x4213cd08647045e0L, 0xa4e0f6a4209b6ee6L, 0x2673c4abb3c8250eL)).seal();
}
